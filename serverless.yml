# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: waraiotoko2 # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true

provider:
  name: aws
  runtime: python2.7
  memorySize: 256
  timeout: 100

# you can overwrite defaults here
  stage: dev
  region: us-west-2
  deploymentBucket: warai.deploy

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: "arn:aws:s3:::raw.waraiotoko"
#    - Effect: "Allow"
#      Action:
#        - "s3:GetObject"
#      Resource: "arn:aws:s3:::raw.waraiotoko/*"
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource: "arn:aws:s3:::hidden.waraiotoko/*"
    - Effect: "Allow"
      Action:
        - "rekognition:*"
      Resource: "*"

# you can define service wide environment variables here
#  environment:
#    CONVERTED_BUCKET_NAME: ${self:custom.CONVERTED_BUCKET_NAME}
#    RAW_BUCKET_NAME: ${self:custom.RAW_BUCKET_NAME}

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
#  hello:
#    handler: handler.hello

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: image
#          method: post
#      - s3: raw.waraiotoko
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending

#    Define function environment variables here
#    environment:
#      variable2: value2
  upload:
    handler: handler.upload
    events:
      - http:
          path: image
          method: post
          cors: true

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
